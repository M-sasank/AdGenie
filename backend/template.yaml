# Add this template-level tag to be applied to resources that support tags
Globals:
  Function:
    Timeout: 10
    Runtime: python3.11
    MemorySize: 128
    Environment:
      Variables:
        PYTHONPATH: /var/runtime
    Tags:
      auto-delete: no

Resources:
  # DynamoDB Table
  BusinessesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: Businesses
      PrimaryKey:
        Name: businessID
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        auto-delete: no

  # SQS Queue
  AdContentQueue:
    Type: AWS::SQS::Queue
    Properties:
      Tags:
        - Key: auto-delete
          Value: no

  # Lambda Functions (they inherit tags from Globals, but you can also specify explicitly)
  AdGenerationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/ad_generation/
      Handler: app.lambda_handler
      Description: Generate ad content using Amazon Bedrock
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - bedrock:InvokeModel
            Resource: "*"
        - SQSSendMessagePolicy:
            QueueName: !GetAtt AdContentQueue.QueueName
      Events:
        ManualTestApi:
          Type: Api
          Properties:
            Path: /manual-test-post
            Method: post
      Environment:
        Variables:
          AD_CONTENT_QUEUE_URL: !Ref AdContentQueue
      Tags:
        auto-delete: no

  PostToInstagramFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/post_to_instagram/
      Handler: app.lambda_handler
      Description: Post generated content to Instagram
      Events:
        QueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt AdContentQueue.Arn
            BatchSize: 1
      Tags:
        auto-delete: no

  CreateBusinessFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/business_create/
      Handler: app.lambda_handler
      Description: Create a new business
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BusinessesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /businesses
            Method: post
      Tags:
        auto-delete: no

  ReadBusinessFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/business_read/
      Handler: app.lambda_handler
      Description: Get a business by ID
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BusinessesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /businesses/{businessID}
            Method: get
      Tags:
        auto-delete: no

  ListBusinessesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/business_list/
      Handler: app.lambda_handler
      Description: List all businesses
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BusinessesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /businesses
            Method: get
      Tags:
        auto-delete: no

  UpdateBusinessFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/business_update/
      Handler: app.lambda_handler
      Description: Update a business by ID
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BusinessesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /businesses/{businessID}
            Method: put
      Tags:
        auto-delete: no

  DeleteBusinessFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/business_delete/
      Handler: app.lambda_handler
      Description: Delete a business by ID
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BusinessesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /businesses/{businessID}
            Method: delete
      Tags:
        auto-delete: no
